#!/bin/sh

set -eu

usage() {
    cat <<USAGE

$cmd - Sync atom.io stars with installed packages

Synopsis
    $cmd -h|--help
    $cmd -n|--dry-run [-u|--user username] [sync-mode]
    $cmd [-u|--user username] sync-mode

Description
    This command syncs atom.io stars with installed packages.
    In push mode, all installed packages will be starred and all starred packages which is not installed will be unstarred.
    In pull mode, all starred packages will be installed and all installed packages which is not starred will be uninstalled.

    -h --help      Print this usage
    -n --dry-run   Dry run
    -u --user      Specify atom.io username
    sync-mode      Sync mode(pull or push)

Example
    $cmd --help
    $cmd --dry-run
    $cmd --dry-run push
    $cmd pull

USAGE
}

atexit() {
    [ -n "$starsfile" ] && rm -f "$starsfile"
    [ -n "$listfile" ] && rm -f "$listfile"
}

apm_sync() {
    trap atexit EXIT
    trap 'trap - EXIT; atexit; exit 1' HUP INT TERM

    starsfile="$(mktemp)"
    listfile="$(mktemp)"

    eval "apm stars --json $([ -n "$username" ] && echo "-u $username")" | jq -r '.[].name' | grep -v '^$' | sort > "$starsfile"
    apm list --installed --bare --no-links | grep -v '^$' | sed 's/@.\{1,\}$//g' | sort > "$listfile"

    package_diff=$(comm -3 $starsfile $listfile | awk -F"\t" '{
        if ($1) remote_only[i++]=$1; if ($2) local_only[j++]=$2
    } END {
        # remote only packages
        for (k = 0; k < i; k++) { printf remote_only[k]; printf " " }
        print ""
        # local only packages
        for (k = 0; k < j; k++) { printf local_only[k]; printf " " }
    }')

    if [ "$dry_run" = "true" ]; then
        if [ "$mode" = "push" ]; then
            echo "$package_diff" | sed -e '1 s/^/Packages will be unstarred: /g' -e '2 s/^/Packages will be unstarred: /g'
        elif [ "$mode" = "pull" ]; then
            echo "$package_diff" | sed -e '1 s/^/Packages will be installed: /g' -e '2 s/^/Packages will be uninstalled: /g'
        else
            echo "$package_diff" | sed -e '1 s/^/Remote only: /g' -e '2 s/^/Local only: /g'
        fi

        return 0
    fi

    echo "$package_diff" | {
        read remote_only || remote_only=""
        read local_only || local_only=""

        if [ "$mode" = "push" ]; then
            echo "$remote_only" | xargs apm unstar
            echo "$local_only" | xargs apm star
        elif [ "$mode" = "pull" ]; then
            echo "$remote_only" | xargs apm install --production
            echo "$local_only" | xargs apm uninstall
        fi
    }
}

main() {
    dry_run=false
    mode=''
    username=''

    cmd=$(basename $0)
    while [ "$#" -gt 0 ]
    do
        case $1 in
            "--help" | "-h") usage; exit 0;;
            "--dry-run" | "-n") dry_run=true && shift 1;;
            "--user" | "-u")
                [ -z "${2+z}" ] && echo "Username is not specified" >&2 && exit 1
                username="$2" && shift 2
                ;;
            -*) echo "Unknown arguments: $1" >&2 && exit 1;;
            "push" | "pull") mode="$1" && shift 1;;
            *) echo "Unknown sync mode: $1" >&2 && exit 1;;
        esac
    done
    [ "$dry_run" = "false" -a -z "$mode" ] && echo "Sync mode is not specified" >&2 && exit 1
    apm_sync
}

main "$@"
